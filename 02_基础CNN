import tensorflow as tf
import matplotlib.pyplot as plt

#调用手写数据集
(x_train,y_train),(x_test,y_test) = tf.keras.datasets.mnist.load_data()

#转换为4维
x_train = x_train.reshape(-1,28,28,1)
x_test = x_test.reshape(-1,28,28,1)

#构建网络
model = tf.keras.Sequential([])
model.add(tf.keras.layers.Conv2D(input_shape=(x_train.shape[1],x_train.shape[2],x_train.shape[3]),filters = 32 , kernel_size = (3,3),
                                 strides=(1,1),padding = 'valid',activation = 'relu'))
model.add(tf.keras.layers.MaxPool2D(pool_size=(2,2)))
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(32,activation = 'relu'))
model.add(tf.keras.layers.Dense(10, activation = 'softmax'))

model.compile(optimizer = 'adam',loss = 'sparse_categorical_crossentropy' , metrics=['accuracy'])
model.summary()

#训练模型
history = model.fit(x_train,y_train,batch_size = 64 , epochs = 5 ,validation_split = 0.1)

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.legend(['training', 'valivation'], loc='upper left')
plt.show()

#评估模型
res = model.evaluate(x_test,y_test)
